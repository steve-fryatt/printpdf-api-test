REM >Protocol
REM
REM Copyright 2023, Stephen Fryatt (info@stevefryatt.org.uk)
REM
REM This file is part of PrintPDFAPITest:
REM
REM   http://www.stevefryatt.org.uk/risc-os
REM
REM Licensed under the EUPL, Version 1.2 only (the "Licence");
REM You may not use this work except in compliance with the
REM Licence.
REM
REM You may obtain a copy of the Licence at:
REM
REM   http://joinup.ec.europa.eu/software/page/eupl
REM
REM Unless required by applicable law or agreed to in
REM writing, software distributed under the Licence is
REM distributed on an "AS IS" basis, WITHOUT WARRANTIES
REM OR CONDITIONS OF ANY KIND, either express or implied.
REM
REM See the Licence for the specific language governing
REM permissions and limitations under the Licence.


REM Initialise the state of the protocol handler.
:
DEF PROCprotocol_initialise


REM The name of the PrintPDF application
ProtocolPrintPDFName$ = "PrintPDF"

REM The task handle of the PrintPDF application
ProtocolPrintPDFTask% = -1


PROCprotocol_find_printpdf
PROCmain_wind_set_task_handle(ProtocolPrintPDFTask%)
ENDPROC


REM Scan the active tasks for a copy of PrintPDF, and update
REM the stored task handle if found.
:
DEF PROCprotocol_find_printpdf
LOCAL next%, task%, end%, task_name$

REM Enumerate the currently loaded tasks, looking for an instance
REM of PrintPDF.

next% = 0

WHILE next% >= 0
	SYS "TaskManager_EnumerateTasks", next%, q%, 256 TO next%, end%

	task% = q%

	WHILE task% < end%
		SYS "XOS_GenerateError", task%!4 TO task_name$
		IF task_name$ = ProtocolPrintPDFName$ THEN
			ProtocolPrintPDFTask% = task%!0
			ENDPROC
		ENDIF

		task% += 16
	ENDWHILE
ENDWHILE
ENDPROC


REM Handle an incoming Message_TaskInitialise, to see if the the
REM new task is an instance of PrintPDF.
REM
REM \param message%	Pointer to the Wimp_Poll block.
:
DEF PROCprotocol_message_task_initialise(message%)
LOCAL task_name$

REM We're not interested if there is already an instance of PrintPDF
REM running, as PrintPDF itself will terminate the new task.

IF ProtocolPrintPDFTask% <> -1 THEN ENDPROC

REM Check if the task is PrintPDF, and if so, remember the handle.

SYS "XOS_GenerateError", message% + 28 TO task_name$

IF task_name$ <> ProtocolPrintPDFName$ THEN ENDPROC

ProtocolPrintPDFTask% = message%!4
PROCmain_wind_set_task_handle(ProtocolPrintPDFTask%)
ENDPROC



REM Handle an incoming Message_TaskCloseDown, checking to see if
REM the passing task is the current instance of PrintPDF.
REM
REM \param message%	Pointer to the Wimp_Poll block.
:
DEF PROCprotocol_message_task_close_down(message%)

REM We're not interested if this isn't PrintPDF.

IF message%!4 <> ProtocolPrintPDFTask% THEN ENDPROC

REM Forget the PrintPDF task handle.

ProtocolPrintPDFTask% = -1
PROCmain_wind_set_task_handle(ProtocolPrintPDFTask%)
ENDPROC





REM Handle bounced messages sent as part of the various protocols.
REM
REM \param message%	Pointer to the Wimp_Poll data block.
:
DEF PROCprotocol_message_bounce(message%)
CASE message%!8 OF
ENDCASE
ENDPROC